{"version":3,"sources":["webpack:///src/app/events-list/events-list.module.ts","webpack:///src/app/events-list/events-list-routing.module.ts","webpack:///src/app/events-list/events-list.component.ts","webpack:///src/app/events-list/events-list.component.html"],"names":["EventsListModule","declarations","imports","routes","path","component","canActivate","EventsListRoutingModule","forChild","exports","EventsListComponent","eventsService","all","subscribe","res","events","err","errorMessage","error","message","selector","templateUrl","styleUrls"],"mappings":"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","file":"events-list-events-list-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EventsListRoutingModule } from './events-list-routing.module';\nimport { EventsListComponent } from './events-list.component';\n\n\n@NgModule({\n  declarations: [EventsListComponent],\n  imports: [\n    CommonModule,\n    EventsListRoutingModule\n  ]\n})\nexport class EventsListModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EventsListComponent } from './events-list.component';\nimport { AuthGuard } from '../guards/auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: EventsListComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EventsListRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { EventsService } from '../services/events/events.service';\nimport { Event } from '../services/events/event';\n\n@Component({\n  selector: 'app-events-list',\n  templateUrl: './events-list.component.html',\n  styleUrls: ['./events-list.component.css']\n})\n\nexport class EventsListComponent implements OnInit {\n  events: Array<Event>;\n  errorMessage: string;\n\n  constructor(private eventsService: EventsService) { }\n\n  ngOnInit(): void {\n    this.eventsService.all().subscribe(res => {\n      this.events = res;\n    }, err => {\n      this.errorMessage = err.error.message;\n    });\n  }\n\n}","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-heading\">Events</div>\n\n                <table class=\"table\" *ngIf=\"events && events.length\">\n                    <tr>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>Event Page</th>\n                    </tr>\n                    <tr *ngFor=\"let event of events\">\n                        <td class=\"event-title\">\n                            {{event.title}}\n                        </td>\n                        <td class=\"event-description\">\n                            {{event.description}}\n                        </td>\n                        <td class=\"event-link\">\n                            <a [routerLink]=\"['/event', event._id]\">View</a>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n\n            <div *ngIf=\"events && !events.length\" class=\"no-events alert alert-info\">There are no events.</div>\n            <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{errorMessage}}</div>\n        </div>\n    </div>\n</div>"]}