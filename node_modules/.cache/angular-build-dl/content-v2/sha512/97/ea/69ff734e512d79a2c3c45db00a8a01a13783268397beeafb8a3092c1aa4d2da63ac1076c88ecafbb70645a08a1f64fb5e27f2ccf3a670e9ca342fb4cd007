{"version":3,"sources":["webpack:///src/app/signup/signup-routing.module.ts","webpack:///src/app/signup/signup.module.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html"],"names":["routes","path","component","SignupRoutingModule","forChild","imports","exports","SignupModule","declarations","SignupComponent","authService","router","user","password","dietPreferences","name","checked","credentials","getSelectedPreferences","signup","subscribe","res","navigate","err","errorMessage","error","message","index","filter","preference","map","selector","templateUrl","styleUrls"],"mappings":"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","file":"signup-signup-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup.component';\n\nconst routes: Routes = [\n  { path: '', component: SignupComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SignupRoutingModule } from './signup-routing.module';\nimport { SignupComponent } from './signup.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [SignupComponent],\n  imports: [\n    CommonModule,\n    SignupRoutingModule,\n    FormsModule\n  ]\n})\nexport class SignupModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../services/auth/user';\nimport { AuthService } from '../services/auth/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  user: User = { 'username': '', password: '' };\n  dietPreferences = [\n    { name: 'BBQ', checked: false },\n    { name: 'Burger', checked: false },\n    { name: 'Chinese', checked: false },\n    { name: 'Deli', checked: false },\n    { name: 'Fast Food', checked: false },\n    { name: 'Italian', checked: false },\n    { name: 'Japanese', checked: false },\n    { name: 'Mexican', checked: false },\n    { name: 'Pizza', checked: false }\n  ];\n  errorMessage: string;\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  signup(credentials) {\n    credentials.dietPreferences = this.getSelectedPreferences();\n    this.authService.signup(credentials).subscribe(res => {\n      this.router.navigate(['/dashboard']); // Redirect our user\n    }, err => {\n      this.errorMessage = err.error.message;\n    });\n  }\n  onPrefCheck(index) {\n    if (this.dietPreferences[index].checked === true) {\n      this.dietPreferences[index].checked = false;\n    } else {\n      this.dietPreferences[index].checked = true;\n    }\n  }\n    getSelectedPreferences() {\n      return this.dietPreferences\n        .filter((preference) => {\n          if (preference.checked === true) { return preference; }\n        })\n        .map((preference) => {\n          return preference.name;\n        });\n    }\n    \n\n}\n\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-4 col-md-offset-4\">\n            <form #form=\"ngForm\" (ngSubmit)=\"signup(form.value)\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Username</label>\n                    <input placeholder=\"Username\" class=\"form-control\" id=\"username\" name=\"username\" type=\"text\"\n                        [(ngModel)]=\"user.username\">\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input placeholder=\"Password\" class=\"form-control\" id=\"password\" name=\"password\" type=\"password\"\n                        [(ngModel)]=\"user.password\">\n                </div>\n                <div class=\"form-group\">\n                    <label>Dietary Preferences:</label>\n                    <div *ngFor=\"let pref of dietPreferences; let i = index;\">\n                        <label class=\"checkbox-inline\" [for]=\"pref.name\">\n                            <input [id]=\"pref.name\" name=\"preference\" type=\"checkbox\"\n                                (change)=\"onPrefCheck(i)\">{{pref.name}}\n                        </label>\n                    </div>\n                </div>\n                <div class=\"error alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-default\" type=\"submit\">Submit</button>\n                    </div>\n            </form>\n        </div>\n    </div>\n</div>"]}